/* eslint-disable react/prop-types */
 import { useEffect, useState } from "react"
// import React from 'react'
 import {Card} from "../components/Card";
import {FormField} from "../components/FormField";
import {Loader} from "../components/Loader";


const RenderCards = ({data,title}) => {
  if (data?.length > 0) {
    return (
      data.map((post) => <Card key={post._id} {...post} />)
    );
    }
  return (
    // <h2 className="mt-5 font-bold text-[#008B8B] text-xl uppercase">{title}</h2>
    <h2 className="mt-5 font-bold text-white text-xl uppercase">{title}</h2>
  );
};

export const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);

  const [searchText, setSearchText] = useState('');
   {/*Suhaanaa safar aur ye mausam hasi,Gauri Hame dar hai ham kho na jaae kahi */}
  // const [searchText, setSearchText] = useState('AI');
  const [searchTimeout, setSearchTimeout] = useState(null);
  // eslint-disable-next-line no-unused-vars
  const [searchedResults, setSearchedResults] = useState(null);


  const fetchPosts = async () => {
    setLoading(true);

    try {
      const response = await fetch('http://localhost:9000/api/v1/post', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });
      if (response.ok) {
        const result = await response.json();
        setAllPosts(result.data.reverse());
      }
    } catch (err) {
      alert(err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase())||item.prompt.toLowerCase().includes(searchText.toLowerCase()));
        setSearchedResults(searchResult);
      }, 500),
    );
  };


  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-white text-[32px]">AI Image Gallery </h1>
        <h3 className="mt-2 text-[#ecf1f7] text-[14px] max-w-[500px]">Browse through a collection of imaginative and visually stunning images generated by ICre AI</h3>
      </div>

      <div className="mt-16 text-white">
        <FormField
          labelName="Search Images"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing Resuls for <span className="text-[#060607]">{searchText}</span>:
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No Search Results Found"
                />
              ) : (
                <RenderCards
                  data={allPosts}
                  title="No Posts Found"
                />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  )
}

export default Home